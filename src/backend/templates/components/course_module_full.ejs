<link href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" rel="stylesheet" />

<div class="grid grid-cols-1 md:grid-cols-3 md:gap-4 h-screen text-black dark:text-white">
    <div class="md:col-span-2 p-5">
        <!-- Top Row for Assignment Information and Assignment Card -->
        <h1 class="text-xl font-semibold pb-5">
            <%= courseModule.title %>
        </h1>
        <div class="course-module-description mb-3">
            <%- courseModule.description %>
        </div>
        <% if(Object.keys(courseModule.files).length > 0) { %>
            <div class="pt-2">
                Attached files:
                <ul class="list-inside list-none">
                    <% courseModule.files.forEach(function(file) { %>
                    <li>
                        <a href="/course/<%= courseId %>/<%= courseTabId %>/<%= courseModuleId %>/<%= file.id %>" download class="text-blue-400 hover:text-blue-200">
                            <ion-icon name="document-outline"></ion-icon>
                            <%= file.file_name %> (<%= file.file_size %> bytes)
                        </a>
                    </li>
                    <% }); %>
                </ul>
            </div>
        <% } %>
        <!-- File selection input -->
        <% if (role === "student" && courseModule && courseModule.assignment) { %>
            <label class="label">
                <span class="label-text">Add Attachments</span>
            </label>
            <div class="container mx-auto my-10">
                <form action="/upload/content" class="dropzone" id="myDropzone">
                    <div class="fallback">
                        <input name="file" type="file" multiple />
                        <button>Detach</button>
                    </div>
                    <div class="dz-message">
                        Drop files here or click to upload.
                    </div>
                </form>

                <button id="submit-btn" class="btn btn-primary">Submit</button>
            </div>
        <% } %>

        <div class="overflow-y-auto h-96 p-5 bg-gray-100 dark:bg-gray-800">
            <% if (studentSubmissions && Object.keys(studentSubmissions).length > 0) { %>
                
                <% if (role === "student") { %>
                    <table class="min-w-full leading-normal">
                        <thead>
                            <tr class="bg-gray-100 border-gray-200 dark:bg-gray-800 dark:border-gray-950">
                                <th class="px-5 py-3 border-b-2 text-left text-xs font-semibold uppercase tracking-wider">
                                    Submission Group ID
                                </th>
                                <th class="px-5 py-3 border-b-2 text-left text-xs font-semibold uppercase tracking-wider">
                                    Submission Time
                                </th>
                                <th class="px-5 py-3 border-b-2 text-left text-xs font-semibold uppercase tracking-wider">
                                    Files
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <% for (const [submissionGroupId, submissionEntry] of Object.entries(studentSubmissions)) { %>
                                <tr class="bg-gray-100 border-gray-200 dark:bg-gray-800 dark:border-gray-900">
                                    <td class="px-5 py-5 border-b text-sm">
                                        <%= submissionGroupId %>
                                    </td>
                                    <td class="px-5 py-5 border-b  text-sm">
                                        <%= submissionEntry.submission_time %>
                                    </td>
                                    <td class="px-5 py-5 border-b text-sm">
                                        <% submissionEntry.files.forEach(file => { %>
                                            <div class="whitespace-no-wrap"><%= file.file_name %> (ID: <%= file.file_id %>)</div>
                                        <% }); %>
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                <% } %>

                <% if (role === "teacher") { %>
                    <table class="min-w-full leading-normal">
                        <thead>
                            <tr class="bg-gray-100 border-gray-200 dark:bg-gray-800 dark:border-gray-950">
                                <th class="px-5 py-3 border-b-2 text-left text-xs font-semibold uppercase tracking-wider">
                                    Student ID
                                </th>
                                <th class="px-5 py-3 border-b-2 text-left text-xs font-semibold uppercase tracking-wider">
                                    Submission Group ID
                                </th>
                                <th class="px-5 py-3 border-b-2 text-left text-xs font-semibold uppercase tracking-wider">
                                    Submission Time
                                </th>
                                <th class="px-5 py-3 border-b-2 text-left text-xs font-semibold uppercase tracking-wider">
                                    Files
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <% for (const [studentId, submissionGroups] of Object.entries(studentSubmissions)) { %>
                                <% for (const [submissionGroupId, submissionEntry] of Object.entries(submissionGroups)) { %>
                                    <tr class="bg-gray-100 border-gray-200 dark:bg-gray-800 dark:border-gray-900">
                                        <td class="px-5 py-5 border-b  text-sm">
                                            <%= studentId %>
                                        </td>
                                        <td class="px-5 py-5 border-b text-sm">
                                            <%= submissionGroupId %>
                                        </td>
                                        <td class="px-5 py-5 border-b  text-sm">
                                            <%= submissionEntry.submission_time %>
                                        </td>
                                        <td class="px-5 py-5 border-b text-sm">
                                            <% submissionEntry.files.forEach(file => { %>
                                                <div class="whitespace-no-wrap"><%= file.file_name %> (ID: <%= file.file_id %>)</div>
                                            <% }); %>
                                        </td>
                                    </tr>
                                <% } %>
                            <% } %>
                        </tbody>
                    </table>
                <% } %>

                <div class="flex justify-between items-center mb-4">
                    <form action="/download/submissions/<%= courseModule.assignment.id %>" method="get">
                        <button type="submit" class="btn btn-primary justify-center text-center m-2">
                            Download Submissions
                        </button>
                    </form>
                </div>
            <% } %>
        </div>
    </div>

    <div class="p-5">
        <div class="p-5 w-full md:w-1/3">
            <!-- Right column for Grading Information -->
            <% if(courseModule.assignment !== undefined) { %>
                <div class="card bg-gray-200 text-black dark:text-white dark:bg-gray-700 w-full md:w-96 shadow-2xl ml-4 rounded-md">
                    <div class="card-body">
                        <h2 class="card-title text-center">Grading</h2>
                        <div class="divider"></div>
                        <div class="flex items-center gap-2">
                            <ion-icon name="calendar-number-outline" style="font-size: 64px"></ion-icon>
                            <span>Due Date: <%= courseModule.assignment.due_date %></span>
                        </div>
                        <div class="divider"></div>
                        <div class="flex items-center gap-2">
                            <ion-icon name="document-outline" style="font-size: 40px"></ion-icon>
                            <span>Type: Assignment</span>
                        </div>
                        <div class="divider"></div> <!-- DaisyUI divider -->
                        <div class="card-actions justify-center">
                            <div class="badge badge-info badge-lg">
                                <%= courseModule.assignment.total_points %> points
                            </div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</div>

<script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>

<!-- Only include this script if we're a student and there is an assignment!!! -->
<% if (role === "student" && courseModule && courseModule.assignment) { %>
    <script>
        const submitButton = document.getElementById("submit-btn");

        async function uploadStudentFiles(fileIds) {
            try {
                const courseId = "<%= courseId %>";

                const payload = JSON.stringify({
                    assignmentId: "<%= courseModule.assignment.id %>",
                    fileIds: fileIds,
                });

                //Correlates uploded file to student for course assignment
                const res = await fetch(
                    "/upload/submission", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: payload
                });

                if (!res.ok) {
                    throw new Error("Failed!");
                }
            } catch (error) {
                showErrorModal(`Failed to create course module: ${error}`);
            }
        }

        try {
            // Dropzone.js Configuration
            Dropzone.options.myDropzone = {
                paramName: "file",
                maxFilesize: 20,
                addRemoveLinks: true,
                uploadMultiple: true,
                parallelUploads: 100,
                maxFiles: 100,
                autoProcessQueue: false,
                init: function() {
                    let fileIds = {};

                    submitButton.addEventListener("click", async () => {
                        fileIds = {};

                        if (this.getQueuedFiles().length > 0) {
                            // If there are files in the queue, process them
                            this.processQueue();
                        } else {
                            showErrorModal("Need to upload a file first!");
                            return;
                        }
                    });

                    this.on("success", function(file, response) {
                        // Store response to get the file IDs
                        fileIds = response;
                    });

                    this.on("queuecomplete", async function() {
                        this.removeAllFiles();
                        await uploadStudentFiles(fileIds);
                        window.location.reload();
                    });
                }
            };
        } catch (error) {
            showErrorModal(`Failed to create course module: ${error}`);
        }
    </script>
<% } %>

<style>
    .dropzone {
        background: #2d3748;
        border: 2px dashed #4a5568;
    }

    .dropzone .dz-message {
        color: white;
    }

    .dropzone .dz-message button {
        background: #4299e1;
        color: white;
        border: none;
        padding: 8px 16px;
        cursor: pointer;
    }

    .dropzone .dz-message button:hover {
        background: #3182ce;
    }
</style>