<link href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" rel="stylesheet" />
<div class="p-5 rounded-md w-full md:w-1/2 text-black dark:text-white">
    <h1 class="text-xl font-semibold pb-5">
        <%= courseModule.title %>
    </h1>
    <div class="course-module-description mb-3">
        <%- courseModule.description %>
    </div>
    <% if(Object.keys(courseModule.files).length > 0) { %>
        <div class="pt-2">
            Attached files:
            <ul class="list-inside list-none">
                <% courseModule.files.forEach(function(file) { %>
                    <li>
                        <a href="/course/<%= courseId %>/<%= courseTabId %>/<%= courseModuleId %>/<%= file.id %>" download class="text-blue-400 hover:text-blue-200">
                            <ion-icon name="document-outline"></ion-icon>
                            <%= file.file_name %> (<%= file.file_size %> bytes)
                        </a>
                    </li>
                <% }); %>
            </ul>
        </div>
    <% } %>
</div>

<!-- File selection input -->
<% if (role === "student") { %>

    <div class="container mx-auto my-10">
        <form action="/upload/content" class="dropzone" id="myDropzone">
            <div class="fallback">
                <input name="file" type="file" multiple />
                <button>Detach</button>
            </div>
            <div class="dz-message">
                Drop files here or click to upload.
            </div>
        </form>

        <button id="submit-btn" class="btn">Submit Assignment</button>
    </div>
<% } %>

<!-- Right column for Grading Information -->
<% if(courseModule.assignment !== undefined) { %>
    <div class="card bg-gray-200 text-black dark:text-white dark:bg-gray-700 w-full md:w-96 shadow-2xl ml-4 rounded-md">
        <div class="card-body">
            <h2 class="card-title text-center">Grading</h2>
            <div class="divider"></div>
            <div class="flex items-center gap-2">
                <ion-icon name="calendar-number-outline" style="font-size: 64px"></ion-icon>
                <span>Due Date: <%= courseModule.assignment.due_date %></span>
            </div>
            <div class="divider"></div>
            <div class="flex items-center gap-2">
                <ion-icon name="document-outline" style="font-size: 40px"></ion-icon>
                <span>Type: Assignment</span>
            </div>
            <div class="divider"></div> <!-- DaisyUI divider -->
            <div class="card-actions justify-center">
                <div class="badge badge-info badge-lg">
                    <%= courseModule.assignment.total_points %> points
                </div>
            </div>
        </div>
    </div>
<% } %>
</div>

<script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>

<!-- Only include this script if we're a student!!! -->
<% if (role === "student") { %>
    <script>
        const submitButton = document.getElementById("submit-btn");

        function uploadStudentFiles(fileIds) {
            return new Promise(async (resolve, reject) => {
                try {
                    const payload = JSON.stringify({
                        assignmentId: "<%= courseModule.assignment.id %>",
                        fileIds: fileIds,
                    });

                    const res = await fetch("/upload/submission", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: payload
                    });

                    if (!res.ok) {
                        throw new Error("Failed to submit assignment.");
                    }
                    resolve();
                } catch (error) {
                    reject(error);
                }
            });
        }

        Dropzone.options.myDropzone = {
            paramName: "file",
            maxFilesize: 20,
            addRemoveLinks: true,
            uploadMultiple: true,
            parallelUploads: 100,
            maxFiles: 100,
            autoProcessQueue: false,
            init: function() {
                let fileIds = [];

                submitButton.addEventListener("click", async () => {
                    if (this.getQueuedFiles().length > 0) {
                        this.processQueue();
                    } else {
                        alert("Please upload at least one file.");
                    }
                });

                this.on("successmultiple", function(files, response) {
                    fileIds = response.map(file => file.id);
                });

                this.on("queuecomplete", async function() {
                    try {
                        await uploadStudentFiles(fileIds);
                        alert("Assignment submitted successfully.");
                        window.location.reload();
                    } catch (error) {
                        alert(`Error: ${error.message}`);
                    }
                });
            }
        };
    </script>
<% } %>

<style>
    .dropzone {
        background: #2d3748;
        border: 2px dashed #4a5568;
    }

    .dropzone .dz-message {
        color: white;
    }

    .dropzone .dz-message button {
        background: #4299e1;
        color: white;
        border: none;
        padding: 8px 16px;
        cursor: pointer;
    }

    .dropzone .dz-message button:hover {
        background: #3182ce;
    }
</style>