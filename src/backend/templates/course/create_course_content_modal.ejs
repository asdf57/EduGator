<!-- Open the modal using ID.showModal() method -->
<button id="create-content" class="btn" onclick="coursecontentmodal.showModal()">add</button>
<dialog id="coursecontentmodal" class="modal">
  <div class="modal-box text-center">
    <h3 class="font-bold text-lg">Add Course Content</h3>

    <!-- Module title input -->
    <label class="label">
        <span class="label-text">Module Title</span>
    </label>
    <input id="module-title" type="text" class="input input-bordered w-full" name="<%= courseId %>" required>

    <!-- Module description input -->
    <label class="label">
        <span class="label-text">Module Description</span>
    </label>
    <textarea id="module-description" class="textarea textarea-bordered w-full"></textarea>

    <!-- Enable submissions input -->
    <label class="label">
        <span class="label-text">Enable Submissions</span>
    </label>
    <input id="enable-submissions" type="checkbox" class="toggle" />

    <!-- Add assignment -->
    <label class="label">
        <span class="label-text">Add Assignment</span>
    </label>
    <input id="add-assignment-input" type="checkbox" class="toggle" />

    <!-- Set assignment due date -->
    <div id="assn-due-date" class="form-control mb-4 hidden">
        <label class="label">
            <span class="label-text">Due Date</span>
        </label>
        <input id="assn-due-date-input" type="date" class="input input-bordered w-full">
    </div>

    <!-- Set assignment points -->
    <div id="assn-points" class="form-control mb-4 hidden">
        <label class="label">
            <span class="label-text">Total Points</span>
        </label>
        <input id="assn-points-input" type="number" min="0" class="input input-bordered w-full" required>
    </div>

    <!-- File selection input -->
    <label class="label">
        <span class="label-text">Add Attachments</span>
    </label>
    <div class="container mx-auto my-10">
        <form action="/upload/content" class="dropzone" id="myDropzone">
            <div class="fallback">
                <input name="file" type="file" multiple />
                <button>Detach</button>
            </div>
            <div class="dz-message">
                Drop files here or click to upload.
            </div>
        </form>
    </div>

    <!-- Submit button -->
    <button id="create-content-btn" class="btn">Create</button>
  </div>

  <form method="dialog" class="modal-backdrop">
    <button>close</button>
  </form>
</dialog>

<script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>

<!-- Course Content Creation Modal Logic -->
<script>
    const contentModal = document.getElementById("coursecontentmodal");
    const createContentBtn = document.getElementById("create-content-btn");
    const contentModuleTitle = document.getElementById("module-title");
    const contentModuleDesc = document.getElementById("module-description");
    const enableSubmissions = document.getElementById("enable-submissions");
    const addAssignmentToggle = document.getElementById("add-assignment-input");
    const assignmentDueDate = document.getElementById("assn-due-date");
    const assignmentPoints = document.getElementById("assn-points");

    let hasAssignment = false;

    addAssignmentToggle.addEventListener("change", (event) => {
        console.log(event.target.checked);
        if (event.target.checked) {
            assignmentDueDate.classList.remove("hidden");
            assignmentPoints.classList.remove("hidden");
            hasAssignment = true;
        } else {
            assignmentDueDate.classList.add("hidden")
            assignmentPoints.classList.add("hidden");
            hasAssignment = false;
        }
    });

    // Dropzone.js Configuration
    Dropzone.options.myDropzone = {
        paramName: "file",
        maxFilesize: 20,
        addRemoveLinks: true,
        uploadMultiple: true,
        parallelUploads: 100,
        maxFiles: 100,
        autoProcessQueue: false,
        init: function() {
            let fileIds = {};

            createContentBtn.addEventListener("click", async () => {
                fileIds = {};
                //Send uploaded files to server before assignment is created
                this.processQueue();
            });

            this.on("success", function(file, response) {
                // Store response for file IDs
                fileIds = response;
            });

            this.on("queuecomplete", async function() {
                this.removeAllFiles();

                console.log({
                    title: contentModuleTitle.value,
                    description: contentModuleDesc.value,
                    enableSubmissions: enableSubmissions.value,
                    hasAssignment: hasAssignment,
                    dueDate: assignmentDueDate.value,
                    points: assignmentPoints.value,
                    attachedFileIds: fileIds,
                });

                //Create the course module/assignment
                const courseId = "<%= courseId %>";
                const payload = await fetch("/create/coursemodule", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        title: contentModuleTitle.value,
                        description: contentModuleDesc.value,
                        enableSubmissions: enableSubmissions.value,
                        hasAssignment: hasAssignment,
                        dueDate: assignmentDueDate.value,
                        points: assignmentPoints.value,
                        attachedFileIds: fileIds,
                        courseTabId: "<%= courseTabId %>"
                    })
                });

                if (!payload.ok) {
                    throw Exception;
                }

                // Close the modal
                contentModal.close();

                // Reset input fields
                contentModuleTitle.value = '';
                contentModuleDesc.value = '';
                enableSubmissions.checked = false;
                addAssignmentToggle.checked = false;
                assignmentDueDate.value = '';
                assignmentPoints.value = '';
                assignmentDueDate.classList.add("hidden");
                assignmentPoints.classList.add("hidden");
            });
        }
    };
</script>
