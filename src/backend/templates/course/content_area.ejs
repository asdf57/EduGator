<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Course Content</title>
  <%- include( '../styling' ) %>
</head>

<body>
  <%- include( '../header' ) %>
    <%- include( '../sidebar' ) %>
      <div class="flex">
        <%- include('course_sidebar') %>

          <main class="flex-grow p-5">
            <h1 class="text-3xl mb-5 font-semibold">
              <%= courseTab.tab_name %>
            </h1>

            <div class="bg-white shadow-lg rounded-lg overflow-hidden">
              <ul id="content-items" class="divide-y divide-gray-200">
                <% for (let i=0; i < courseModules.length; i++) { %>
                  <li coursemoduleid="<%= courseModules[i].id %>"
                    class="module-item hover:bg-gray-50 menu-item mb-2 draggable-item p-2 cursor-pointer">
                    <div class="flex items-center justify-between">
                      <div>
                        <div class="p-4">
                          <h3 class="text-xl font-semibold pb-5">
                            <%= courseModules[i].title %>
                          </h3>
                          <div class="course-module-description">
                            <%- courseModules[i].description %>
                          </div>
                          <% if(Object.keys(courseModules[i].files).length> 0) { %>
                            <div class="pt-2">
                              Attached files:
                              <ul class="list-inside list-none">
                                <% courseModules[i].files.forEach(function(file) { %>
                                  <li>
                                    <a href="#" download class="text-blue-600 hover:text-blue-800">
                                      <ion-icon name="document-outline"></ion-icon>
                                      <%= file.file_name %> (<%= file.file_size %> bytes)
                                    </a>
                                  </li>
                                  <% }); %>
                              </ul>
                            </div>
                          <% } %>
                          <% if(Object.keys(courseModules[i].assignment).length> 0) { %>
                            <div class="pt-2">
                              Assignment:
                              <ul class="list-inside list-none">
                                <% courseModules[i].assignment.forEach(function(assignment) { %>
                                  <li>
                                    <%= assignment.due_date %>
                                    <%= assignment.total_points %>
                                  </li>
                                  <% }); %>
                              </ul>
                            </div>
                            <% } %>
                        </div>
                      </div>
                      <button id="course-module-delete" onclick="deleteCourseModule('<%= courseModules[i].id %>')">
                        <ion-icon name="trash-outline"></ion-icon>
                      </button>
                    </div>
                  </li>
                  <% } %>
              </ul>
            </div>

            <% if (role==="teacher" ) { %>
              <div class="flex items-center justify-center p-5">
                <%- include('create_course_content_modal') %>
              </div>
              <% } %>
          </main>
      </div>

      <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
      <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
      <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
</body>

</html>

<script>
  function deleteCourseModule(courseModuleId) {
    console.log(courseModuleId);
    fetch('/delete/coursemodule', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ courseModuleId: courseModuleId })
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Error trying to delete course module!');
        }
        window.location.reload();
      })
      .catch(error => {
        console.error(`Error while deleting course module: ${error}`);
      });
  }
  //Event listener for moving content areas around
  document.addEventListener('DOMContentLoaded', () => {
    const modules = document.getElementById('content-items');
    Sortable.create(modules, {
      animation: 150,
      ghostClass: 'bg-blue-100',
      dragClass: "opacity-100",
      onEnd: async (event) => {
        let itemOrder = {};
        const items = modules.getElementsByClassName("module-item");

        for (var i = 0; i < items.length; i++) {
          const databaseId = items[i].getAttribute("coursemoduleid");
          itemOrder[databaseId] = i;
        }

        const payload = await fetch("/update/coursemodule/order", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            "order": itemOrder,
            "courseTabId": "<%= courseTabId %>"
          })
        });
      },
    });
  });
</script>