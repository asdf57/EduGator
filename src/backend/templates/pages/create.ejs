<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create</title>
    <%- include( '../components/styling' ) %>
</head>

<body>
    <%- include( '../components/header' ) %>
    <%- include( '../components/sidebar' ) %>

    <main class="flex justify-center items-center min-h-screen bg-gray-100 dark:bg-gray-800">
        <div class="w-full max-w-lg m-2 p-8 shadow-md mx-auto rounded-md bg-gray-100 dark:bg-gray-950">
            <form id="signupForm" class="card p-5">
                <div class="form-control mb-4">
                    <label class="label">
                        <span class="label-text">Select Role</span>
                    </label>
                    <select id="roleSelect" class="select select-bordered w-full" onchange="toggleFields()">
                        <option value="" disabled selected>Choose a role</option>
                        <option value="student">Student</option>
                        <option value="admin">Admin</option>
                        <option value="teacher">Teacher</option>
                    </select>
                </div>

                <div class="form-control mb-4">
                    <label class="label">
                        <span class="label-text">Username</span>
                    </label>
                    <input id="username" type="text" placeholder="Username" class="input input-bordered w-full" name="username" required>
                </div>

                <div class="form-control mb-4">
                    <label class="label">
                        <span class="label-text">Actual Name</span>
                    </label>
                    <input id="actual-name" type="text" placeholder="Actual Name" class="input input-bordered w-full" name="actualName" required>
                </div>

                <div id="academicYearField" class="form-control mb-4 hidden">
                    <label class="label">
                        <span class="label-text">Academic Year</span>
                    </label>
                    <select id="academic-year" class="select select-bordered w-full" name="academicYear">
                        <option value="freshman">Freshman</option>
                        <option value="sophomore">Sophomore</option>
                        <option value="junior">Junior</option>
                        <option value="senior">Senior</option>
                    </select>
                </div>

                <div id="graduationDateField" class="form-control mb-4 hidden">
                    <label class="label">
                        <span class="label-text">Expected Graduation Date</span>
                    </label>
                    <input id="graduation-date" type="date" class="input input-bordered w-full" name="expectedGraduation">
                </div>

                <div id="courseField" class="form-control mb-4 hidden justify-center items-center">
                    <label class="label">
                        <span class="label-text">Courses</span>
                    </label>
                    <div class="w-full h-64 bg-base-300 rounded-box overflow-y-auto">
                        <div class="menu p-4">
                            <ul>
                                <% for (let i = 0; i < courses.length; i++) { %>
                                    <li class="menu-item mb-2">
                                        <input type="checkbox" name="course" id="option<%=i+1%>" value=<%= courses[i].id%> class="hidden peer" />
                                        <label for="option<%=i+1%>" class="block cursor-pointer p-3 rounded-lg hover:bg-base-200 peer-checked:bg-primary peer-checked:text-white peer-checked:border peer-checked:border-primary text-center text-lg" >
                                            <span><%= courses[i].id%> - <%= courses[i].course_name %></span>
                                        </label>
                                    </li>
                                <% } %>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="form-control mb-6">
                    <label class="label">
                        <span class="label-text">Password</span>
                    </label>
                    <input id="password" type="password" placeholder="Password" class="input input-bordered w-full" name="password" required>
                </div>

                <button id="signup" type="submit" class="btn btn-primary w-full">Sign up</button>
                <div id="result" class="w-full text-center"></div>
            </form>
        </div>
    </main>
</body>

<script>
    const signupButton = document.getElementById("signup");
    const roleSelect = document.getElementById("roleSelect");
    const usernameInput = document.getElementById("username");
    const actualNameInput = document.getElementById("actual-name");
    const academicYearSelect = document.getElementById("academic-year");
    const graduationDateInput = document.getElementById("graduation-date");
    const passwordInput = document.getElementById("password");
    const resultDiv = document.getElementById("result");

    signupButton.addEventListener("click", async (event) => {
        event.preventDefault(); // Prevent the default form submit behavior

        const courseInputs = document.getElementsByName("course");
        const selectedCourses = Array.from(courseInputs).filter(checkbox => checkbox.checked).map(checkbox => checkbox.value);

        resultDiv.textContent = "";

        try {
            const response = await fetch("/create/entity", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    username: usernameInput.value,
                    password: passwordInput.value,
                    actualName: actualNameInput.value,
                    academicYear: academicYearSelect.value,
                    graduationDate: graduationDateInput.value,
                    courses: selectedCourses,
                    role: roleSelect.value
                })
            });

            if (response.ok) {
                roleSelect.selectedIndex = 0; // Reset the selection
                toggleFields(); // Update UI
                window.location.reload();
            } else {
                const body = await response.json();
                if (body.hasOwnProperty("error")) {
                    resultDiv.textContent = body.error;
                }
            }
        } catch (error) {
            console.error(error);
            resultDiv.textContent = error;
        }
    });

    function toggleFields() {
        const academicYearField = document.getElementById('academicYearField');
        const graduationDateField = document.getElementById('graduationDateField');
        const coursesField = document.getElementById("courseField");

        if (roleSelect.value === "student") {
            academicYearField.classList.remove('hidden');
            graduationDateField.classList.remove('hidden');
            coursesField.classList.remove('hidden');
        } else if (roleSelect.value === "teacher") {
            academicYearField.classList.add('hidden');
            graduationDateField.classList.add('hidden');
            coursesField.classList.remove('hidden');
        } else {
            academicYearField.classList.add('hidden');
            graduationDateField.classList.add('hidden');
            coursesField.classList.add('hidden');
        }
    }
</script>

</html>
