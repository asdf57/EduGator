<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Course Content</title>
    <%- include( '../components/styling' ) %>
</head>

<body>
<%- include( '../components/error_modal' ) %>
<%- include( '../components/header' ) %>
<%- include( '../components/sidebar' ) %>
<div class="flex">
    <%- include('../components/course_sidebar') %>

    <main class="flex-grow p-5">
        <h1 class="text-3xl mb-5 font-semibold">
            <%= courseTab.tab_name %>
        </h1>

        <div class="bg-white shadow-lg rounded-lg overflow-hidden">
            <ul id="content-items" class="divide-y divide-gray-200">
                <% for (let i=0; i < courseModules.length; i++) { %>
                    <li coursemoduleid="<%= courseModules[i].id %>"
                        class="module-item hover:bg-gray-50 mb-2 draggable-item p-2 cursor-pointer">
                        <div class="flex items-center justify-between hover:bg-gray-50">
                            <div onclick="navigateToCourseModulePage('<%= courseModules[i].id %>')" class="flex-grow">
                                <%- include('../components/course_module', {courseModule: courseModules[i]}) %>
                            </div>

                            <% if (role === "teacher" ) { %>
                                <div class="flex items-center pr-4">
                                    <button id="course-module-delete" onclick="deleteCourseModule('<%= courseModules[i].id %>')" class="hover:bg-indigo-800 rounded p-2">
                                        <ion-icon name="trash-outline"></ion-icon>
                                    </button>
                                    <button id="course-module-update" class="hover:bg-indigo-800 rounded p-2">
                                        <ion-icon name="pencil-outline"></ion-icon>
                                    </button>
                                </div>
                            <% } %>
                        </div>
                    </li>
                <% } %>
            </ul>
        </div>

        <% if (role==="teacher" ) { %>
            <div class="flex items-center justify-center p-5">
                <%- include('../components/course_content_modal') %>
            </div>
        <% } %>
    </main>
</div>

<script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
<script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
</body>
</html>

<script>
    function deleteCourseModule(courseModuleId) {
        fetch('/delete/coursemodule', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ courseModuleId: courseModuleId })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error trying to delete course module!');
                }
                window.location.reload();
            })
            .catch(error => {
                console.error(`Error while deleting course module: ${error}`);
            });
    }

    function navigateToCourseModulePage(courseModuleId) {
        var currentUrl = window.location.href;
        var newUrl = currentUrl.endsWith('/') ? currentUrl + courseModuleId : currentUrl + '/' + courseModuleId;
        window.location.href = newUrl;
    }

    //Obtains course module data
    async function getModuleData(courseModuleId) {
        try {
            const response = await fetch(`/coursemodule/${courseModuleId}`);
            if (!response.ok) {
                throw new Error("Failed to obtain module data!");
            }

            const moduleData = await response.json();
            return moduleData;
        } catch (error) {
            console.error(`Error while fetching course module data: ${error}`);
            return null; // Or handle the error as needed
        }
    }

    //Event listener for moving content areas around
    document.addEventListener('DOMContentLoaded', () => {
        const modules = document.getElementById('content-items');
        Sortable.create(modules, {
            animation: 150,
            ghostClass: 'bg-blue-100',
            dragClass: "opacity-100",
            onEnd: async (event) => {
                let itemOrder = {};
                const items = modules.getElementsByClassName("module-item");

                for (var i = 0; i < items.length; i++) {
                    const databaseId = items[i].getAttribute("coursemoduleid");
                    itemOrder[databaseId] = i;
                }

                const payload = await fetch("/update/coursemodule/order", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        "order": itemOrder,
                        "courseTabId": "<%= courseTabId %>"
                    })
                });
            },
        });

        // Course module update buttons
        const updateButtons = document.querySelectorAll("#course-module-update");
        updateButtons.forEach(button => {
            button.addEventListener("click", function(event) {
                event.stopPropagation();

                const moduleId = this.closest("li").getAttribute("coursemoduleid");
                console.log("moduleId: " + moduleId);

                (async () => {
                    const moduleData = await getModuleData(moduleId);

                    // Open the modal for update
                    openCourseContentModal({
                        courseId: "<%= courseId %>",
                        courseModuleId: moduleId,
                        moduleData: moduleData,
                        action: 'update'
                    });
                })();
            });
        });


    });
</script>